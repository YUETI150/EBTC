height = 700),
align = "center"
)
)
server <- function(input, output) {
output$plot <- renderPlotly({
if(input$endpointname == "All"){
df1 <- df1
} else {
df1 <- df1[df1$Endpointname == input$endpointname,]
}
validate(
need(input$Species %in%
c(df1$Species[if(input$endpointname == "All"){TRUE}else{df1$Endpointname == input$endpointname}], "All"),
"Data doesn't exist, please select others")
)
#if(input$endpointname == "ALT"){
# df1 <- df1[df1$Endpointname == "ALT",]
#} else if(input$endpointname == "AST"){
# df1 <- df1[df1$Endpointname == "AST",]
#} else if(input$endpointname == "ALP"){
# df1 <- df1[df1$Endpointname == "ALP",]
#} else if(input$endpointname == "Bilirubin (free)"){
# df1 <- df1[df1$Endpointname == "Bilirubin (free)",]
#} else if(input$endpointname == "Bilirubin (total)"){
# df1 <- df1[df1$Endpointname == "Bilirubin (total)",]
#} else if(input$endpointname == "Bilirubin (direct)"){
# df1 <- df1[df1$Endpointname == "Bilirubin (direct)",]
#} else if(input$endpointname == "Albumin"){
# df1 <- df1[df1$Endpointname == "Albumin",]
#} else if(input$endpointname == "Liver weight, relative"){
# df1 <- df1[df1$Endpointname == "Liver weight, relative",]
#} else if(input$endpointname == "Liver weight, absolute"){
# df1 <- df1[df1$Endpointname == "Liver weight, absolute",]
#} else if(input$endpointname == "Gamma-glutamyl transferase (γGT)"){
# df1 <- df1[df1$Endpointname == "Gamma-glutamyl transferase (γGT)",]
#} else if(input$endpointname == "Trialylglycerol"){
#  df1 <- df1[df1$Endpointname == "Trialylglycerol",]
#} else if(input$endpointname == "All"){
#  df1 <- df1
#}
if(input$Species == "All" & input$overlay == TRUE){
df <- df1
l <- list(x = 0.02, y = 0.98, bgcolor = "rgba(0,0,0,0)")
ggplot(data = df, aes(x=Species, y=EffectPercent, fill = Drug, text = c(paste0("StudyID: ", comparedID, "\n", "Year: ", researchyear, "\n", "Research Name: ", researchname)))) +
geom_boxplot(outlier.colour="grey", outlier.shape=16, outlier.size=2) +
geom_point(pch = 21, position = position_jitterdodge())+
scale_y_continuous(breaks = seq(20, 600, by = 20))+
scale_fill_manual(
breaks = c("Rosiglitazone/Avandia", "Troglitazone/Rezulin"),
values=c("green", "red"))
#scale_y_continuous(breaks = c(-512,-256,-128,-64,-32,-16,-8,-4,-2,0,2,2^2,2^3,2^4,2^5,2^6,2^7,2^8))+
#coord_trans(y = "log2")+
#theme_bw()+
#theme(legend.position = "top")
ggplotly() %>% layout(boxmode = "group",
legend = l,
yaxis = list(
title = "Effect compared with control (%)"))
} else if(input$Species == "All" & input$overlay == FALSE){
df <- df1
l <- list(x = 0.02, y = 0.98, bgcolor = "rgba(0,0,0,0)")
ggplot(data = df, aes(x=Species, y=EffectPercent, fill = Drug, text = c(paste0("StudyID: ", comparedID, "\n", "Year: ", researchyear, "\n", "Research Name: ", researchname)))) +
geom_boxplot(outlier.colour="grey", outlier.shape=16, outlier.size=2) +
scale_y_continuous(breaks = seq(20, 600, by = 20))+
scale_fill_manual(
breaks = c("Rosiglitazone/Avandia", "Troglitazone/Rezulin"),
values=c("green", "red"))
#scale_y_continuous(breaks = c(-512,-256,-128,-64,-32,-16,-8,-4,-2,0,2,2^2,2^3,2^4,2^5,2^6,2^7,2^8))+
#coord_trans(y = "asinh")+
#theme_bw()+
#theme(legend.position = "top")
ggplotly() %>% layout(boxmode = "group",
legend = l,
yaxis = list(
title = "Effect compared with control (%)"))
} else if(input$Species == "Rat" & input$overlay == TRUE){
df <- df1[df1$Species == "Rat",]
l <- list(x = 0.02, y = 0.98, bgcolor = "rgba(0,0,0,0)")
ggplot(data = df, aes(x=Species, y=EffectPercent, fill = Drug, text = c(paste0("StudyID: ", comparedID, "\n", "Year: ", researchyear, "\n", "Research Name: ", researchname)))) +
geom_boxplot(outlier.colour="grey", outlier.shape=16, outlier.size=2) +
geom_point(pch = 21, position = position_jitterdodge())+
scale_y_continuous(breaks = seq(40, 580, by = 20))+
scale_fill_manual(
breaks = c("Rosiglitazone/Avandia", "Troglitazone/Rezulin"),
values=c("green", "red"))
#scale_y_continuous(breaks = c(-256,-128,-64,-32,-16,-8,-4,-2,0,2,2^2,2^3,2^4,2^5,2^6,2^7,2^8))+
#coord_trans(y = "asinh")+
#theme_bw()+
#theme(axis.title.x=element_blank())+
#theme(legend.position = "top")
ggplotly() %>% layout(boxmode = "group",
legend = l,
yaxis = list(
title = "Effect compared with control (%)"))
} else if(input$Species == "Rat" & input$overlay == FALSE){
df <- df1[df1$Species == "Rat",]
l <- list(x = 0.02, y = 0.98, bgcolor = "rgba(0,0,0,0)")
ggplot(data = df, aes(x=Species, y=EffectPercent, fill = Drug, text = c(paste0("StudyID: ", comparedID, "\n", "Year: ", researchyear, "\n", "Research Name: ", researchname)))) +
geom_boxplot(outlier.colour="grey", outlier.shape=16, outlier.size=2) +
scale_y_continuous(breaks = seq(40, 580, by = 20))+
scale_fill_manual(
breaks = c("Rosiglitazone/Avandia", "Troglitazone/Rezulin"),
values=c("green", "red"))
#scale_y_continuous(breaks = c(-128,-64,-32,-16,-8,-4,-2,0,2,2^2,2^3,2^4,2^5,2^6,2^7,2^8))+
#coord_trans(y = "asinh")+
#theme_bw()+
#theme(axis.title.x=element_blank())+
#theme(legend.position = "top")
ggplotly() %>% layout(boxmode = "group",
legend = l,
yaxis = list(
title = "Effect compared with control (%)"))
} else if(input$Species == "Non-human primate" & input$overlay == TRUE){
df <- df1[df1$Species == "Non-human primate",]
l <- list(x = 0.02, y = 0.98, bgcolor = "rgba(0,0,0,0)")
ggplot(data = df, aes(x=Species, y=EffectPercent, fill = Drug, text = c(paste0("StudyID: ", comparedID, "\n", "Year: ", researchyear, "\n", "Research Name: ", researchname)))) +
geom_boxplot(outlier.colour="grey", outlier.shape=16, outlier.size=2) +
geom_point(pch = 21, position = position_jitterdodge())+
scale_y_continuous(breaks = seq(30, 180, by = 10))+
scale_fill_manual(
breaks = c("Troglitazone/Rezulin"),
values=c("red"))
#scale_y_continuous(breaks = c(-512,-256,-128,-64,-32,-16,-8,-4,-2,0,2,2^2,2^3,2^4,2^5,2^6))+
#coord_trans(y = "asinh")+
#theme_bw()+
#theme(axis.title.x=element_blank())+
#theme(legend.position = "top")
ggplotly() %>% layout(boxmode = "group",
legend = l,
yaxis = list(
title = "Effect compared with control (%)"))
} else if(input$Species == "Non-human primate" & input$overlay == FALSE){
df <- df1[df1$Species == "Non-human primate",]
l <- list(x = 0.02, y = 0.98, bgcolor = "rgba(0,0,0,0)")
ggplot(data = df, aes(x=Species, y=EffectPercent, fill = Drug, text = c(paste0("StudyID: ", comparedID, "\n", "Year: ", researchyear, "\n", "Research Name: ", researchname)))) +
geom_boxplot(outlier.colour="grey", outlier.shape=16, outlier.size=2) +
scale_y_continuous(breaks = seq(30, 180, by = 10))+
scale_fill_manual(
breaks = c("Troglitazone/Rezulin"),
values=c("red"))
#scale_y_continuous(breaks = c(-512,-256,-128,-64,-32,-16,-8,-4,-2,0,2,2^2,2^3,2^4,2^5,2^6))+
#coord_trans(y = "asinh")+
#theme_bw()+
#theme(axis.title.x=element_blank())+
#theme(legend.position = "top")
ggplotly() %>% layout(boxmode = "group",
legend = l,
yaxis = list(
title = "Effect compared with control (%)"))
} else if(input$Species == "Human" & input$overlay == TRUE){
df <- df1[df1$Species == "Human",]
l <- list(x = 0.02, y = 0.98, bgcolor = "rgba(0,0,0,0)")
ggplot(data = df, aes(x=Species, y=EffectPercent, fill = Drug, text = c(paste0("StudyID: ", comparedID, "\n", "Year: ", researchyear, "\n", "Research Name: ", researchname)))) +
geom_boxplot(outlier.colour="grey", outlier.shape=16, outlier.size=2) +
geom_point(pch = 21, position = position_jitterdodge())+
scale_y_continuous(breaks = seq(80, 130, by = 5))+
scale_fill_manual(
breaks = c("Rosiglitazone/Avandia", "Troglitazone/Rezulin"),
values=c("green", "red"))
#scale_y_continuous(breaks = c(-8,-4,-2,0,2,2^2,2^3))+
#coord_trans(y = "asinh")+
#theme_bw()+
#theme(axis.title.x=element_blank())+
#theme(legend.position = "top")
ggplotly() %>% layout(boxmode = "group",
legend = l,
yaxis = list(
title = "Effect compared with control (%)"))
} else if(input$Species == "Human" & input$overlay == FALSE){
df <- df1[df1$Species == "Human",]
l <- list(x = 0.02, y = 0.98, bgcolor = "rgba(0,0,0,0)")
ggplot(data = df, aes(x=Species, y=EffectPercent, fill = Drug, text = c(paste0("StudyID: ", comparedID, "\n", "Year: ", researchyear, "\n", "Research Name: ", researchname)))) +
geom_boxplot(outlier.colour="grey", outlier.shape=16, outlier.size=2) +
scale_y_continuous(breaks = seq(80, 130, by = 5))+
scale_fill_manual(
breaks = c("Rosiglitazone/Avandia", "Troglitazone/Rezulin"),
values=c("green", "red"))
#scale_y_continuous(breaks = c(-8,-4,-2,0,2,2^2,2^3))+
#coord_trans(y = "asinh")+
#theme_bw()+
#theme(axis.title.x=element_blank())+
#theme(legend.position = "top")
ggplotly() %>% layout(boxmode = "group",
legend = l,
yaxis = list(
title = "Effect compared with control (%)"))
} else if(input$Species == "Mouse" & input$overlay == TRUE){
df <- df1[df1$Species == "Mouse",]
l <- list(x = 0.02, y = 0.98, bgcolor = "rgba(0,0,0,0)")
ggplot(data = df, aes(x=Species, y=EffectPercent, fill = Drug, text = c(paste0("StudyID: ", comparedID, "\n", "Year: ", researchyear, "\n", "Research Name: ", researchname)))) +
geom_boxplot(outlier.colour="grey", outlier.shape=16, outlier.size=2) +
geom_point(pch = 21, position = position_jitterdodge())+
scale_y_continuous(breaks = seq(90, 170, by = 10))+
scale_fill_manual(
breaks = c("Rosiglitazone/Avandia", "Troglitazone/Rezulin"),
values=c("green", "red"))
#scale_y_continuous(breaks = c(-8,-4,-2,0,2,2^2,2^3,2^4,2^5,2^6,2^7))+
#coord_trans(y = "asinh")+
#theme_bw()+
#theme(axis.title.x=element_blank())+
#theme(legend.position = "top")
ggplotly() %>% layout(boxmode = "group",
legend = l,
yaxis = list(
title = "Effect compared with control (%)"))
} else if(input$Species == "Mouse" & input$overlay == FALSE){
df <- df1[df1$Species == "Mouse",]
l <- list(x = 0.02, y = 0.98, bgcolor = "rgba(0,0,0,0)")
ggplot(data = df, aes(x=Species, y=EffectPercent, fill = Drug, text = c(paste0("StudyID: ", comparedID, "\n", "Year: ", researchyear, "\n", "Research Name: ", researchname)))) +
geom_boxplot(outlier.colour="grey", outlier.shape=16, outlier.size=2) +
scale_y_continuous(breaks = seq(90, 170, by = 10))+
scale_fill_manual(
breaks = c("Rosiglitazone/Avandia", "Troglitazone/Rezulin"),
values=c("green", "red"))
#scale_y_continuous(breaks = c(-8,-4,-2,0,2,2^2,2^3,2^4,2^5,2^6,2^7))+
#coord_trans(y = "asinh")+
#theme_bw()+
#theme(axis.title.x=element_blank())+
#theme(legend.position = "top")
ggplotly() %>% layout(boxmode = "group",
legend = l,
yaxis = list(
title = "Effect compared with control (%)"))
}
})
}
shinyApp(ui, server)
########################
#references:
#split boxes into 2 drugs
#http://t-redactyl.io/blog/2016/04/creating-plots-in-r-using-ggplot2-part-10-boxplots.html
#https://ggplot2.tidyverse.org/reference/position_jitterdodge.html
#http://www.sthda.com/english/wiki/ggplot2-box-plot-quick-start-guide-r-software-and-data-visualization
library(ggplot2)
library(shiny)
library(dplyr)
library(openxlsx)
library(gridExtra)
library(rsconnect)
library(scales)
library(DT)
library(plotly)
library(stringr)
#setwd("/Users/dingle/Desktop/ALY6980/project A material/datasets")
df1 <- read.xlsx("dta_partB.xlsx")
df1 <- df1[-c(80,81,82,83),]
df1$Endpointname <- gsub("liver weight, relative", "Liver weight, relative", df1$Endpointname)
df1$Endpointname <- gsub("SGOT", "AST", df1$Endpointname)
df1$EffectPercent <- (df1$MeanofEffectvalue_treated)/(df1$MeanofEffectvalue_control)*100
df1$researchname <- str_match(df1$Bibliography, "(.*?), (.*?).")[,1]
df1$researchyear <- str_match(df1$Bibliography, "\\d{4}")
#asinh_trans <<- function(){
#  trans_new(name = 'asinh', transform = function(x) asinh(x),
#            inverse = function(x) sinh(x))
#}
ui <- fluidPage(
headerPanel("EBTC Tox21 Systematic Review Results: DILI biomarkers across species"),
sidebarPanel( width = 3,
selectInput("endpointname", "Endpoint Name:",
c("All" = "All",
"AST" = "AST",
"ALT" = "ALT",
"ALP" = "ALP",
"Bilirubin (free)" = "Bilirubin (free)",
"Bilirubin (total)" = "Bilirubin (total)",
"Bilirubin (direct)" = "Bilirubin (direct)",
"Albumin" = "Albumin",
"Liver weight, relative" = "Liver weight, relative",
"Liver weight, absolute" = "Liver weight, absolute",
"Gamma-glutamyl transferase (γGT)" = "Gamma-glutamyl transferase (γGT)",
"Trialylglycerol" = "Trialylglycerol")),
selectInput("Species", "Species:",
c("All" = "All",
"Mouse" = "Mouse",
"Rat" = "Rat",
"Human" = "Human",
"Non-human primate" = "Non-human primate")),
checkboxInput("overlay", "Without overlay", FALSE)
#checkboxInput("logy", "logarithmic Y-axis", FALSE)
),
mainPanel(
plotlyOutput("plot",
width = "105%",
height = 700),
align = "center"
)
)
server <- function(input, output) {
output$plot <- renderPlotly({
if(input$endpointname == "All"){
df1 <- df1
} else {
df1 <- df1[df1$Endpointname == input$endpointname,]
}
validate(
need(input$Species %in%
c(df1$Species[if(input$endpointname == "All"){TRUE}else{df1$Endpointname == input$endpointname}], "All"),
"Data doesn't exist, please select others")
)
#if(input$endpointname == "ALT"){
# df1 <- df1[df1$Endpointname == "ALT",]
#} else if(input$endpointname == "AST"){
# df1 <- df1[df1$Endpointname == "AST",]
#} else if(input$endpointname == "ALP"){
# df1 <- df1[df1$Endpointname == "ALP",]
#} else if(input$endpointname == "Bilirubin (free)"){
# df1 <- df1[df1$Endpointname == "Bilirubin (free)",]
#} else if(input$endpointname == "Bilirubin (total)"){
# df1 <- df1[df1$Endpointname == "Bilirubin (total)",]
#} else if(input$endpointname == "Bilirubin (direct)"){
# df1 <- df1[df1$Endpointname == "Bilirubin (direct)",]
#} else if(input$endpointname == "Albumin"){
# df1 <- df1[df1$Endpointname == "Albumin",]
#} else if(input$endpointname == "Liver weight, relative"){
# df1 <- df1[df1$Endpointname == "Liver weight, relative",]
#} else if(input$endpointname == "Liver weight, absolute"){
# df1 <- df1[df1$Endpointname == "Liver weight, absolute",]
#} else if(input$endpointname == "Gamma-glutamyl transferase (γGT)"){
# df1 <- df1[df1$Endpointname == "Gamma-glutamyl transferase (γGT)",]
#} else if(input$endpointname == "Trialylglycerol"){
#  df1 <- df1[df1$Endpointname == "Trialylglycerol",]
#} else if(input$endpointname == "All"){
#  df1 <- df1
#}
if(input$Species == "All" & input$overlay == TRUE){
df <- df1
l <- list(x = 0.02, y = 0.98, bgcolor = "rgba(0,0,0,0)")
ggplot(data = df, aes(x=Species, y=EffectPercent, fill = Drug, text = c(paste0("StudyID: ", comparedID, "\n", "Year: ", researchyear, "\n", "Research Name: ", researchname)))) +
geom_boxplot(outlier.colour="grey", outlier.shape=16, outlier.size=2) +
geom_point(pch = 21, position = position_jitterdodge())+
scale_y_continuous(breaks = seq(20, 600, by = 20))+
scale_fill_manual(
breaks = c("Rosiglitazone/Avandia", "Troglitazone/Rezulin"),
values=c("green", "red"))
#scale_y_continuous(breaks = c(-512,-256,-128,-64,-32,-16,-8,-4,-2,0,2,2^2,2^3,2^4,2^5,2^6,2^7,2^8))+
#coord_trans(y = "log2")+
#theme_bw()+
#theme(legend.position = "top")
ggplotly() %>% layout(boxmode = "group",
legend = l,
yaxis = list(
title = "Effect compared with control (%)"))
} else if(input$Species == "All" & input$overlay == FALSE){
df <- df1
l <- list(x = 0.02, y = 0.98, bgcolor = "rgba(0,0,0,0)")
ggplot(data = df, aes(x=Species, y=EffectPercent, fill = Drug, text = c(paste0("StudyID: ", comparedID, "\n", "Year: ", researchyear, "\n", "Research Name: ", researchname)))) +
geom_boxplot(outlier.colour="grey", outlier.shape=16, outlier.size=2) +
scale_y_continuous(breaks = seq(20, 600, by = 20))+
scale_fill_manual(
breaks = c("Rosiglitazone/Avandia", "Troglitazone/Rezulin"),
values=c("green", "red"))
#scale_y_continuous(breaks = c(-512,-256,-128,-64,-32,-16,-8,-4,-2,0,2,2^2,2^3,2^4,2^5,2^6,2^7,2^8))+
#coord_trans(y = "asinh")+
#theme_bw()+
#theme(legend.position = "top")
ggplotly() %>% layout(boxmode = "group",
legend = l,
yaxis = list(
title = "Effect compared with control (%)"))
} else if(input$Species == "Rat" & input$overlay == TRUE){
df <- df1[df1$Species == "Rat",]
l <- list(x = 0.02, y = 0.98, bgcolor = "rgba(0,0,0,0)")
ggplot(data = df, aes(x=Species, y=EffectPercent, fill = Drug, text = c(paste0("StudyID: ", comparedID, "\n", "Year: ", researchyear, "\n", "Research Name: ", researchname)))) +
geom_boxplot(outlier.colour="grey", outlier.shape=16, outlier.size=2) +
geom_point(pch = 21, position = position_jitterdodge())+
scale_y_continuous(breaks = seq(40, 580, by = 20))+
scale_fill_manual(
breaks = c("Rosiglitazone/Avandia", "Troglitazone/Rezulin"),
values=c("green", "red"))
#scale_y_continuous(breaks = c(-256,-128,-64,-32,-16,-8,-4,-2,0,2,2^2,2^3,2^4,2^5,2^6,2^7,2^8))+
#coord_trans(y = "asinh")+
#theme_bw()+
#theme(axis.title.x=element_blank())+
#theme(legend.position = "top")
ggplotly() %>% layout(boxmode = "group",
legend = l,
yaxis = list(
title = "Effect compared with control (%)"))
} else if(input$Species == "Rat" & input$overlay == FALSE){
df <- df1[df1$Species == "Rat",]
l <- list(x = 0.02, y = 0.98, bgcolor = "rgba(0,0,0,0)")
ggplot(data = df, aes(x=Species, y=EffectPercent, fill = Drug, text = c(paste0("StudyID: ", comparedID, "\n", "Year: ", researchyear, "\n", "Research Name: ", researchname)))) +
geom_boxplot(outlier.colour="grey", outlier.shape=16, outlier.size=2) +
scale_y_continuous(breaks = seq(40, 580, by = 20))+
scale_fill_manual(
breaks = c("Rosiglitazone/Avandia", "Troglitazone/Rezulin"),
values=c("green", "red"))
#scale_y_continuous(breaks = c(-128,-64,-32,-16,-8,-4,-2,0,2,2^2,2^3,2^4,2^5,2^6,2^7,2^8))+
#coord_trans(y = "asinh")+
#theme_bw()+
#theme(axis.title.x=element_blank())+
#theme(legend.position = "top")
ggplotly() %>% layout(boxmode = "group",
legend = l,
yaxis = list(
title = "Effect compared with control (%)"))
} else if(input$Species == "Non-human primate" & input$overlay == TRUE){
df <- df1[df1$Species == "Non-human primate",]
l <- list(x = 0.02, y = 0.98, bgcolor = "rgba(0,0,0,0)")
ggplot(data = df, aes(x=Species, y=EffectPercent, fill = Drug, text = c(paste0("StudyID: ", comparedID, "\n", "Year: ", researchyear, "\n", "Research Name: ", researchname)))) +
geom_boxplot(outlier.colour="grey", outlier.shape=16, outlier.size=2) +
geom_point(pch = 21, position = position_jitterdodge())+
scale_y_continuous(breaks = seq(30, 180, by = 10))+
scale_fill_manual(
breaks = c("Troglitazone/Rezulin"),
values=c("red"))
#scale_y_continuous(breaks = c(-512,-256,-128,-64,-32,-16,-8,-4,-2,0,2,2^2,2^3,2^4,2^5,2^6))+
#coord_trans(y = "asinh")+
#theme_bw()+
#theme(axis.title.x=element_blank())+
#theme(legend.position = "top")
ggplotly() %>% layout(boxmode = "group",
legend = l,
yaxis = list(
title = "Effect compared with control (%)"))
} else if(input$Species == "Non-human primate" & input$overlay == FALSE){
df <- df1[df1$Species == "Non-human primate",]
l <- list(x = 0.02, y = 0.98, bgcolor = "rgba(0,0,0,0)")
ggplot(data = df, aes(x=Species, y=EffectPercent, fill = Drug, text = c(paste0("StudyID: ", comparedID, "\n", "Year: ", researchyear, "\n", "Research Name: ", researchname)))) +
geom_boxplot(outlier.colour="grey", outlier.shape=16, outlier.size=2) +
scale_y_continuous(breaks = seq(30, 180, by = 10))+
scale_fill_manual(
breaks = c("Troglitazone/Rezulin"),
values=c("red"))
#scale_y_continuous(breaks = c(-512,-256,-128,-64,-32,-16,-8,-4,-2,0,2,2^2,2^3,2^4,2^5,2^6))+
#coord_trans(y = "asinh")+
#theme_bw()+
#theme(axis.title.x=element_blank())+
#theme(legend.position = "top")
ggplotly() %>% layout(boxmode = "group",
legend = l,
yaxis = list(
title = "Effect compared with control (%)"))
} else if(input$Species == "Human" & input$overlay == TRUE){
df <- df1[df1$Species == "Human",]
l <- list(x = 0.02, y = 0.98, bgcolor = "rgba(0,0,0,0)")
ggplot(data = df, aes(x=Species, y=EffectPercent, fill = Drug, text = c(paste0("StudyID: ", comparedID, "\n", "Year: ", researchyear, "\n", "Research Name: ", researchname)))) +
geom_boxplot(outlier.colour="grey", outlier.shape=16, outlier.size=2) +
geom_point(pch = 21, position = position_jitterdodge())+
scale_y_continuous(breaks = seq(80, 130, by = 5))+
scale_fill_manual(
breaks = c("Rosiglitazone/Avandia", "Troglitazone/Rezulin"),
values=c("green", "red"))
#scale_y_continuous(breaks = c(-8,-4,-2,0,2,2^2,2^3))+
#coord_trans(y = "asinh")+
#theme_bw()+
#theme(axis.title.x=element_blank())+
#theme(legend.position = "top")
ggplotly() %>% layout(boxmode = "group",
legend = l,
yaxis = list(
title = "Effect compared with control (%)"))
} else if(input$Species == "Human" & input$overlay == FALSE){
df <- df1[df1$Species == "Human",]
l <- list(x = 0.02, y = 0.98, bgcolor = "rgba(0,0,0,0)")
ggplot(data = df, aes(x=Species, y=EffectPercent, fill = Drug, text = c(paste0("StudyID: ", comparedID, "\n", "Year: ", researchyear, "\n", "Research Name: ", researchname)))) +
geom_boxplot(outlier.colour="grey", outlier.shape=16, outlier.size=2) +
scale_y_continuous(breaks = seq(80, 130, by = 5))+
scale_fill_manual(
breaks = c("Rosiglitazone/Avandia", "Troglitazone/Rezulin"),
values=c("green", "red"))
#scale_y_continuous(breaks = c(-8,-4,-2,0,2,2^2,2^3))+
#coord_trans(y = "asinh")+
#theme_bw()+
#theme(axis.title.x=element_blank())+
#theme(legend.position = "top")
ggplotly() %>% layout(boxmode = "group",
legend = l,
yaxis = list(
title = "Effect compared with control (%)"))
} else if(input$Species == "Mouse" & input$overlay == TRUE){
df <- df1[df1$Species == "Mouse",]
l <- list(x = 0.02, y = 0.98, bgcolor = "rgba(0,0,0,0)")
ggplot(data = df, aes(x=Species, y=EffectPercent, fill = Drug, text = c(paste0("StudyID: ", comparedID, "\n", "Year: ", researchyear, "\n", "Research Name: ", researchname)))) +
geom_boxplot(outlier.colour="grey", outlier.shape=16, outlier.size=2) +
geom_point(pch = 21, position = position_jitterdodge())+
scale_y_continuous(breaks = seq(90, 170, by = 10))+
scale_fill_manual(
breaks = c("Rosiglitazone/Avandia", "Troglitazone/Rezulin"),
values=c("green", "red"))
#scale_y_continuous(breaks = c(-8,-4,-2,0,2,2^2,2^3,2^4,2^5,2^6,2^7))+
#coord_trans(y = "asinh")+
#theme_bw()+
#theme(axis.title.x=element_blank())+
#theme(legend.position = "top")
ggplotly() %>% layout(boxmode = "group",
legend = l,
yaxis = list(
title = "Effect compared with control (%)"))
} else if(input$Species == "Mouse" & input$overlay == FALSE){
df <- df1[df1$Species == "Mouse",]
l <- list(x = 0.02, y = 0.98, bgcolor = "rgba(0,0,0,0)")
ggplot(data = df, aes(x=Species, y=EffectPercent, fill = Drug, text = c(paste0("StudyID: ", comparedID, "\n", "Year: ", researchyear, "\n", "Research Name: ", researchname)))) +
geom_boxplot(outlier.colour="grey", outlier.shape=16, outlier.size=2) +
scale_y_continuous(breaks = seq(90, 170, by = 10))+
scale_fill_manual(
breaks = c("Rosiglitazone/Avandia", "Troglitazone/Rezulin"),
values=c("green", "red"))
#scale_y_continuous(breaks = c(-8,-4,-2,0,2,2^2,2^3,2^4,2^5,2^6,2^7))+
#coord_trans(y = "asinh")+
#theme_bw()+
#theme(axis.title.x=element_blank())+
#theme(legend.position = "top")
ggplotly() %>% layout(boxmode = "group",
legend = l,
yaxis = list(
title = "Effect compared with control (%)"))
}
})
}
shinyApp(ui, server)
